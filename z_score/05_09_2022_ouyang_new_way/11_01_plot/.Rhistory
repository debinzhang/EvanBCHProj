u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u + ggtitle("lh_bankssts_thickness raw data with outlier removed")
u + geom_point()
getwd()
setwd("/Users/dzhang/DebinProjs/R")
# In R 4.0.x, data.frame() and other functions use stringsAsFactors=FALSE as default, whereas it was TRUE before
movies <- read.csv("P2-Movie-Ratings.csv", stringsAsFactors=TRUE)
head(movies)
colnames(movies)<-c("Film", "Genre", "CriticRating", "AudienceRating", "BudgetMillions", "Year")
head(movies)
str(movies)
summary(movies)
# change numeric to factor
factor(movies$Year)
movies$Year <- factor(movies$Year)
summary(movies)
str(movies)
levels(movies$Year)
levels(factor(movies$Year))
# ---- Aethetics
library(ggplot2)
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
# add geometry
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating)) +
geom_point()
# add color
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre)) +
geom_point()
# add size
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre,
size=BudgetMillions)) +
geom_point()
# -------------- Plotting with Layers
p <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre,
size=BudgetMillions))
# point
p + geom_point()
# lines
p + geom_line()
# mulitple layers
p + geom_line() + geom_point()
# ------------- Overriding Aesthetics
q <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre,
size=BudgetMillions))
# add geom layer
q + geom_point()
#overriding aes
# example 1
q + geom_point(aes(size=CriticRating))
# example 2
q + geom_point(aes(color=BudgetMillions))
# q remains the same
q + geom_point()
# example 3
q + geom_point(aes(x=BudgetMillions)) + xlab("Budget InMillions $$$")
# example 4
p + geom_line(size=1) + geom_point()
# -------------------- Mapping Vs Setting
r <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
r + geom_point()
# add color
#1 . Mapping
r + geom_point(aes(color=Genre))
#2. Setting:
r + geom_point(color="DarkGreen")
# error
# r + geom_point(aes(color="DarkGreen"))
#1. Mapping
r + geom_point(aes(size=BudgetMillions))
#2. Setting
r + geom_point(size=10)
# --------------- Histograms and Density Charts
s <- ggplot(data=movies, aes(x=BudgetMillions))
s + geom_histogram(binwidth = 10)
# add color
s + geom_histogram(binwidth = 10, aes(fill=Genre))
# add a border
s + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
# sometimes you may need denisity charts:
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position="stack")
# -------------- Starting Layer Tips
t <- ggplot(data=movies, aes(x=AudienceRating))
t + geom_histogram(binwidth = 10, fill="white", color="Blue")
t + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
# another way
t <- ggplot(data=movies)
t + geom_histogram(binwidth = 10, aes(x=AudienceRating), fill="white", colour="Blue")
head(movies)
t + geom_histogram(binwidth = 10, aes(x=CriticRating), fill="white", colour="Blue")
head(movies)
# --------------- statistical Transformations
?geom_smooth
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre))
u + geom_point() + geom_smooth(fill=NA)
# boxplots
u <- ggplot(data=movies, aes(x=Genre, y=AudienceRating, color=Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2) + geom_point()
#tip /hack:
u + geom_boxplot(size=1.2) + geom_jitter()
#another way:
u + geom_jitter() + geom_boxplot(size=1.2, alpha=0.5)
# ----------------- Using Facets
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
#facets
# Genre per row
v + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")  +
facet_grid(Genre~., scales="free")
# Genre per column
v + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")  +
facet_grid(.~Genre, scales="free")
# scatterplots:
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
color=Genre))
w + geom_point(size=2)
#facets
w + geom_point(size=2) + facet_grid(Genre~.)
w + geom_point(size=2) + facet_grid(.~Year)
w + geom_point(size=2) + facet_grid(Genre~Year)
# with smoother
w + geom_point(size=1) + geom_smooth() + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) + geom_smooth() + facet_grid(Genre~Year)
#-----------------Coordinates
#limits
#zoom
m <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
size=BudgetMillions,
color=Genre))
m + geom_point() + xlim(50, 100) + ylim(50, 100)
# Wont work well always
n <- ggplot(data=movies, aes(x=BudgetMillions))
n + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black") +
ylim(0, 50)
#instead - zoom:
n + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black") +
coord_cartesian(ylim=c(0,50))
# improve #1
w + geom_point(aes(size=BudgetMillions)) + geom_smooth() +
facet_grid(Genre~Year) +
coord_cartesian(ylim=c(0,100))
# ------------------ Theme
o <- ggplot(data=movies, aes(x=BudgetMillions))
h <- o + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
#label formatting
h + xlab("Money Axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size = 30))
#tick mark formatting
h + xlab("Money Axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size = 30),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20))
#legend formatting
h + xlab("Money Axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size = 30),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_text(size=30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
#title
# hjust=0.5 (center) hjust=1 (right align), hjust=0 (left align)
h + xlab("Money Axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size = 30),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_text(size=30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=30, family = "Courier", hjust=0.5))
h + xlab("Money Axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution")
#title
# hjust=0.5 (center) hjust=1 (right align), hjust=0 (left align)
h + xlab("Money Axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size = 30),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_text(size=30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=30, family = "Courier", hjust=0.5))
h + xlab("Money Axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution")
h + xlab("Money Axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") + theme(plot.title = element_text(color="DarkBlue",
size=30, family = "Courier", hjust=0.5))
#title
# hjust=0.5 (center) hjust=1 (right align), hjust=0 (left align)
h + xlab("Money Axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size = 30),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_text(size=30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=30, family = "Courier", hjust=0.5))
View(movies)
library(ggplot2)
library(dplyr)
wd <- "/Users/dzhang/Gits/EvanBCHProj/z_score/05_09_2022_ouyang_new_way/10_27_simple_plot"
setwd(wd)
gg_data <- read.csv("lh_bankssts_thickness_raw_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u + geom_point()
u + ggtitle("lh_bankssts_thickness raw data with outlier removed")  + theme(plot.title = element_text(color="DarkBlue", + size=30, family = "Courier", hjust=0.5))
u + ggtitle("lh_bankssts_thickness raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=30, family = "Courier", hjust=0.5))
u + ggtitle("lh_bankssts_thickness raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=10, family = "Courier", hjust=0.5))
u + geom_point()
u + geom_point() + ggtitle("raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=10, family = "Courier", hjust=0.5))
u + geom_point(size=1) + ggtitle("raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=10, family = "Courier", hjust=0.5))
u + geom_point(size=0.5) + ggtitle("raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=10, family = "Courier", hjust=0.5))
u + geom_point(size=0.7) + ggtitle("raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=10, family = "Courier", hjust=0.5))
u + geom_point(size=0.7) + ggtitle("raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
d
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_thickness, color=Dataset))
v + geom_boxplot()
v + geom_boxplot() + ggtitle("raw data with outlier removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gen_4_sheet(data_raw, data_harmo, 'lh_bankssts_thickness')
library(ggplot2)
library(dplyr)
wd <- "/Users/dzhang/Gits/EvanBCHProj/z_score/05_09_2022_ouyang_new_way/10_27_simple_plot"
setwd(wd)
data_raw <- read.csv("preHarmo_LH_thickness.csv", stringsAsFactors = TRUE)
data_harmo <- read.csv("postHarmo_LH_thickness.csv", stringsAsFactors = TRUE)
gen_4_sheet <- function(data_raw, data_harmo, feature) {
#  raw data
print("Start to process raw data ...", quote=FALSE)
raw_tbl_list <- remove_outlier(data_raw, feature, FALSE)
gen_csv(raw_tbl_list, feature, FALSE)
print(paste("AVO summary for raw ", feature, " before removing outlier:", sep=''), quote=FALSE)
aov_rst <- aov(get(feature) ~ Dataset, data= data.frame(raw_tbl_list[1]))
print(summary(aov_rst))
print("", quote=FALSE)
print(paste("AVO summary for raw ", feature, " after removing outlier:", sep=''), quote=FALSE)
aov_rst2 <- aov(get(feature) ~ Dataset, data = data.frame(raw_tbl_list[2]))
print(summary(aov_rst2))
# harmonization data
print("", quote=FALSE)
print("", quote=FALSE)
print("Start to process harmonization data ...", quote=FALSE)
harmo_tbl_list <- remove_outlier(data_harmo, feature, TRUE)
gen_csv(harmo_tbl_list, feature, TRUE)
print(paste("AVO summary for harmonization ", feature, " before removing outlier:", sep=''), quote=FALSE)
aov_rst <- aov(get(feature) ~ Dataset, data= data.frame(harmo_tbl_list[1]))
print(summary(aov_rst))
print("", quote=FALSE)
print(paste("AVO summary for harmonization ", feature, " after removing outlier:", sep=''), quote=FALSE)
aov_rst2 <- aov(get(feature) ~ Dataset, data = data.frame(harmo_tbl_list[2]))
print(summary(aov_rst2))
}
gen_csv <- function(data_list, feature, harmoData=FALSE) {
if (harmoData) {
suffix <- '_harmo'
} else {
suffix <- '_raw'
}
# output pre_outlier removal csv file that contains only dataset and feature column
# file name is like: harmo_lh_bankssts_thickness.csv
outfile <- paste(wd, '/', feature, suffix, ".csv", sep="")
write.csv(data_list[1], outfile, row.names = FALSE)
# output post_outlier removal csv file that contains only dataset and feature column
# file name is like: harmo_no_outlier_lh_bankssts_thickness.csv
outfileAfrm <- paste(wd, '/',  feature, suffix, '_no_outlier', '.csv', sep="")
write.csv(data_list[2], outfileAfrm, row.names = FALSE)
}
remove_outlier <- function(data, feature, harmoData=FALSE) {
featureAndDataset <- data %>% select(Dataset, Age, {{feature}})
aov_rst <- aov(get(feature) ~ Dataset, data = data)
summary(aov_rst)
nrowB4rm <- nrow(featureAndDataset)
quartiles <- quantile(featureAndDataset[[feature]], probs=c(.25, .75), na.rm = FALSE)
IQR <-  IQR(featureAndDataset[[feature]])
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data_no_outlier <- subset(featureAndDataset, featureAndDataset[[feature]]>Lower &
featureAndDataset[[feature]] < Upper)
nrowAfrm <- nrow(data_no_outlier)
print(paste("Outlier Removal Result: ", "row# before removal:", nrowB4rm, "; Row# after removal:",
nrowAfrm, "; Outlier row removed:", (nrowB4rm-nrowAfrm), sep=""), quote=FALSE)
# put the two output data table into a list, and return the list
list(featureAndDataset, data_no_outlier)
}
gen_4_sheet(data_raw, data_harmo, 'lh_bankssts_thickness')
library(ggplot2)
library(dplyr)
wd <- "/Users/dzhang/Gits/EvanBCHProj/z_score/05_09_2022_ouyang_new_way/10_27_simple_plot"
setwd(wd)
gg_data <- read.csv("lh_bankssts_thickness_raw.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u + geom_point(size=0.7) + ggtitle("raw data") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_thickness_raw_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u + geom_point(size=0.7) + ggtitle("raw data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_thickness, color=Dataset))
v + geom_boxplot() + ggtitle("raw datawith outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_point(size=0.7) + ggtitle("raw data") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
gg_data <- read.csv("lh_bankssts_thickness_raw.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_point(size=0.7) + ggtitle("raw data") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
u <- u + geom_point(size=0.7) + ggtitle("raw data") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_thickness, color=Dataset))
v + geom_boxplot() + ggtitle("raw data") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_thickness_raw_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_point(size=0.7) + ggtitle("raw data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_thickness, color=Dataset))
v + geom_boxplot() + ggtitle("raw datawith outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_thickness_harmo.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_point(size=0.7) + ggtitle("Data with harmonization") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_thickness, color=Dataset))
v + geom_boxplot() + ggtitle("Data with harmonization") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_thickness_harmo_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_point(size=0.7) + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_thickness, color=Dataset))
v + geom_boxplot() + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_thickness_harmo.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_thickness, color=Dataset))
v + geom_boxplot() + ggtitle("Data with harmonization") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_thickness_harmo_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_point(size=0.7) + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
gg_data <- read.csv("lh_bankssts_thickness_harmo_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_smooth() + geom_point(size=0.7) + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
u <- u + geom_smooth() + geom_point(size=0.7) + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
getwd()
setwd("/Users/dzhang/DebinProjs/R")
# In R 4.0.x, data.frame() and other functions use stringsAsFactors=FALSE as default, whereas it was TRUE before
movies <- read.csv("P2-Movie-Ratings.csv", stringsAsFactors=TRUE)
head(movies)
colnames(movies)<-c("Film", "Genre", "CriticRating", "AudienceRating", "BudgetMillions", "Year")
head(movies)
str(movies)
summary(movies)
# change numeric to factor
factor(movies$Year)
movies$Year <- factor(movies$Year)
summary(movies)
str(movies)
levels(movies$Year)
levels(factor(movies$Year))
# ---- Aethetics
library(ggplot2)
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
# add geometry
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating)) +
geom_point()
# add color
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre)) +
geom_point()
# add size
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre,
size=BudgetMillions)) +
geom_point()
# -------------- Plotting with Layers
p <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre,
size=BudgetMillions))
# point
p + geom_point()
# lines
p + geom_line()
# mulitple layers
p + geom_line() + geom_point()
# ------------- Overriding Aesthetics
q <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre,
size=BudgetMillions))
# add geom layer
q + geom_point()
#overriding aes
# example 1
q + geom_point(aes(size=CriticRating))
# example 2
q + geom_point(aes(color=BudgetMillions))
# q remains the same
q + geom_point()
# example 3
q + geom_point(aes(x=BudgetMillions)) + xlab("Budget InMillions $$$")
# example 4
p + geom_line(size=1) + geom_point()
# -------------------- Mapping Vs Setting
r <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
r + geom_point()
# add color
#1 . Mapping
r + geom_point(aes(color=Genre))
#2. Setting:
r + geom_point(color="DarkGreen")
# error
# r + geom_point(aes(color="DarkGreen"))
#1. Mapping
r + geom_point(aes(size=BudgetMillions))
#2. Setting
r + geom_point(size=10)
# --------------- Histograms and Density Charts
s <- ggplot(data=movies, aes(x=BudgetMillions))
s + geom_histogram(binwidth = 10)
# add color
s + geom_histogram(binwidth = 10, aes(fill=Genre))
# add a border
s + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
# sometimes you may need denisity charts:
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position="stack")
# -------------- Starting Layer Tips
t <- ggplot(data=movies, aes(x=AudienceRating))
t + geom_histogram(binwidth = 10, fill="white", color="Blue")
t + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
# another way
t <- ggplot(data=movies)
t + geom_histogram(binwidth = 10, aes(x=AudienceRating), fill="white", colour="Blue")
head(movies)
t + geom_histogram(binwidth = 10, aes(x=CriticRating), fill="white", colour="Blue")
head(movies)
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre))
u + geom_point() + geom_smooth(fill=NA)
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
color=Genre))
w + geom_point(size=2)
# with smoother
w + geom_point(size=1) + geom_smooth() + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) + geom_smooth() + facet_grid(Genre~Year)
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre))
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre))
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, color=Genre))
u + geom_point() + geom_smooth(fill=NA)
u + geom_point() + geom_smooth(fill=NA, formula = y ~x, method = 'lm')
u + geom_point() + geom_smooth(fill=NA, formula = y ~x)
library(ggplot2)
library(dplyr)
wd <- "/Users/dzhang/Gits/EvanBCHProj/z_score/05_09_2022_ouyang_new_way/10_27_simple_plot"
setwd(wd)
gg_data <- read.csv("lh_bankssts_thickness_raw.csv", stringsAsFactors = TRUE)
gg_data <- read.csv("lh_bankssts_thickness_harmo_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_smooth() + geom_point(size=0.7) + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
u <- u + geom_smooth(formula = y ~ x, method = "lm") + geom_point(size=0.7) + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
gg_data <- read.csv("lh_bankssts_thickness_harmo_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_smooth() + geom_point(size=0.7) + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
library(ggplot2)
library(dplyr)
wd <- "/Users/dzhang/Gits/EvanBCHProj/z_score/05_09_2022_ouyang_new_way/10_27_simple_plot"
setwd(wd)
gg_data <- read.csv("lh_bankssts_thickness_harmo_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_thickness, color=Dataset))
u <- u + geom_point(size=0.7) + geom_smooth() + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
gen_4_sheet(data_raw, data_harmo, 'lh_bankssts_curvind')
gg_data <- read.csv("lh_bankssts_curvind_raw.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_curvind, color=Dataset))
library(ggplot2)
library(dplyr)
wd <- "/Users/dzhang/Gits/EvanBCHProj/z_score/05_09_2022_ouyang_new_way/10_27_simple_plot"
setwd(wd)
gg_data <- read.csv("lh_bankssts_curvind_raw.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_curvind, color=Dataset))
u <- u + geom_point(size=0.7) + geom_smooth() + ggtitle("raw data") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_curvind, color=Dataset))
v + geom_boxplot() + ggtitle("raw data") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_curvind_raw_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_curvind, color=Dataset))
u <- u + geom_point(size=0.7) + geom_smooth() + ggtitle("raw data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_curvind, color=Dataset))
v + geom_boxplot() + ggtitle("raw data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_curvind_harmo.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_curvind, color=Dataset))
u <- u + geom_point(size=0.7)  + geom_smooth()+ ggtitle("Data with harmonization") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_curvind, color=Dataset))
v + geom_boxplot() + ggtitle("Data with harmonization") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
gg_data <- read.csv("lh_bankssts_curvind_harmo_no_outlier.csv", stringsAsFactors = TRUE)
u <- ggplot(data=gg_data, aes(x=Age, y=lh_bankssts_curvind, color=Dataset))
u <- u + geom_point(size=0.7) + geom_smooth() + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
u
v <- ggplot(data=gg_data, aes(x=Dataset, y=lh_bankssts_curvind, color=Dataset))
v + geom_boxplot() + ggtitle("Harmonized data with outliers removed") + theme(plot.title = element_text(color="DarkBlue", size=15, family = "Courier", hjust=0.5))
